<program> ::= <block>

<block> ::= "{" <stmt_list> "}"

<stmt_list> ::= <stmt_list> <stmt> | <stmt_list> <decl> | ¦Å

<decl> ::= <type> id ";"

<type> ::= <type> "[" <expr> "]" | "int" | "bool" | "float" | "char"

<stmt> ::= <block> | <assign_stmt> | <if_stmt> | <while_stmt> | <input_stmt> | <output_stmt>

<assign_stmt> ::= <access> "=" <expr> ";"

<if_stmt> ::= "if" "(" <expr> ")" <stmt> | "if" "(" <expr> ")" <stmt> "else" <stmt>

<while_stmt> ::= "while" "(" <expr> ")" <stmt>

<input_stmt> ::= "input" "(" <access> ")" ";"

<output_stmt> ::= "output" "(" <expr> ")" ";"

<expr> ::= <expr> <bi_op_1> <expr_1> | <expr_1>

<expr_1> ::= <expr_1> <bi_op_2> <expr_2> | <expr_2>

<expr_2> ::= <expr_2> <bi_op_3> <expr_3> | <expr_3>

<expr_3> ::= <expr_3> <bi_op_4> <expr_4> | <expr_4>

<expr_4> ::= <expr_4> <bi_op_5> <expr_5> | <expr_5>

<expr_5> ::= <expr_5> <bi_op_6> <expr_6> | <expr_6>

<expr_6> ::= <un_op> <expr> | "(" <expr> ")" | <access> | <literal>

<un_op> ::= "!" | "+" | "-"

<bi_op_1> ::= "||"

<bi_op_2> ::= "&&"

<bi_op_3> ::= "==" | "!="

<bi_op_4> ::= "<" | "<=" | ">" | ">="

<bi_op_5> ::= "+" | "-"

<bi_op_6> ::= "*" | "/" | "%"

<access> ::= <id> | <access> "[" <expr> "]"

<id> ::= id

<literal> ::= integer_literal | float_literal | string_literal | char_literal | bool_literal