<program> ::= <decl_list>

<decl_list> ::= <decl_list> <var_decl>
              | <decl_list> <fun_decl>
              | ε

<fun_list> ::= <fun_list> <fun>
             | ε

<fun> ::= <type> id "(" <para_list> ")" <block>
        | <type> id "(" ")" <block> 
        | "void" id "(" <para_list> ")" <block>
        | "void" id "(" ")" <block>

<para_list> ::= <para_list> "," <para>
              | <para>

<para> ::= <type> id
         | <type> <array_def>

<var_decl> ::= <type> id ";"
             | <type> <array_def> ";"

<type> ::= "int" 
         | "bool" 
         | "float" 
         | "char"

<array_def> ::= <array_def> "[" <expr> "]"
              | id "[" <expr> "]"

<stmt_list> ::= <stmt_list> <stmt> 
              | <stmt_list> <var_decl> 
              | ε

<stmt> ::= <block>
         | <assign_stmt>
         | <expr_stmt>
         | <if_stmt>
         | <while_stmt>
         | <break_stmt> 
         | <continue_stmt>
         | <input_stmt>
         | <output_stmt>
         | <call_stmt>
         | <return_stmt>

<block> ::= "{" <stmt_list> "}"

<assign_stmt> ::= <location> "=" <expr> ";"

<expr_stmt> ::= <expr> ";"

<if_stmt> ::= "if" "(" <expr> ")" <stmt> 
            | "if" "(" <expr> ")" <stmt> "else" <stmt>

<while_stmt> ::= "while" "(" <expr> ")" <stmt>

<break_stmt> ::= "break" ";"

<continue_stmt> ::= "continue" ";"

<input_stmt> ::= "input" "(" <location> ")" ";"

<output_stmt> ::= "output" "(" <expr> ")" ";"

<call_stmt> ::= <call> ";"

<return_stmt> ::= "return" ";"
                | "return" <expr> ";"

<expr> ::= <expr> <bi_op_1> <expr_1>
         | <expr_1>

<expr_1> ::= <expr_1> <bi_op_2> <expr_2>
           | <expr_2>

<expr_2> ::= <expr_2> <bi_op_3> <expr_3>
           | <expr_3>

<expr_3> ::= <expr_3> <bi_op_4> <expr_4>
           | <expr_4>

<expr_4> ::= <expr_4> <bi_op_5> <expr_5>
           | <expr_5>

<expr_5> ::= <expr_5> <bi_op_6> <expr_6>
           | <expr_6>

<expr_6> ::= <un_op> <expr7>
           | <expr_7>

<expr_7> ::= "(" <expr> ")"
           | <location>
           | <literal>
           | <call>

<call> ::= id "(" <expr_list> ")"
         | id "(" ")"

<expr_list> ::= <expr_list> "," <expr>
              | <expr>

<un_op> ::= "!" | "+" | "-"

<bi_op_1> ::= "||"

<bi_op_2> ::= "&&"

<bi_op_3> ::= "==" | "!="

<bi_op_4> ::= "<" | "<=" | ">" | ">="

<bi_op_5> ::= "+" | "-"

<bi_op_6> ::= "*" | "/" | "%"

<location> ::= id
           | <location> "[" <expr> "]"

<literal> ::= integer_literal
            | float_literal
            | string_literal
            | char_literal
            | bool_literal